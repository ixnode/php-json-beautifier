# ---
# Recipe from https://www.nginx.com/resources/wiki/start/topics/recipes/symfony/
# ---
server {
    # Listen to port 80
    listen       80;
    listen  [::]:80;

    # Access for all server names.
    server_name  ~^(.+)$;

    # Root path and index files
    root /var/www/web/public;
    index index.php index.html index.htm;

    location / {
        # try to serve file directly
        try_files $uri /index.php$is_args$args;
    }

    # PROD - Only allow symfony index.php controller
    location ~ ^/index\.php(/|$) {
        #try_files $uri = 404;
        #fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        fastcgi_pass php:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param REQUEST_URI $request_uri;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/index.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
        return 404;
    }

    # Error and access log
    access_log /var/log/nginx/web-access.log;
    error_log /var/log/nginx/web-error.log;
}
