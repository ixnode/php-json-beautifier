# ===========================================
# A recipe to deliver dynamic Composer PHP pages via nginx.
#
# @author Björn Hempel <bjoern@hempel.li>
# @version 1.0 (2021-09-19)
# ===========================================

# ===========================================
# MIT License
#
# Copyright (c) 2021 Björn Hempel <bjoern@hempel.li>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# ===========================================

# ===========================================
# Start app:
# ----------
# ❯ docker-compose up -d
#
# Show containers:
# ----------------
# ❯ docker container ls
#
# Login into containers:
# ----------------------
# ❯ docker-compose exec nginx bash
# ❯ docker-compose exec php bash
# ❯ docker-compose exec composer bash
#
# Open app (local):
# -----------------
# - http://localhost:8000/
#
# Restart containers:
# -------------------
# ❯ docker-compose restart
#
# Shutdown containers:
# --------------------
# ❯ docker-compose down
#
# ===========================================

version: "3.8"

# configure services
services:

    # Nginx to serve the app.
    nginx:
        # @see: https://hub.docker.com/_/nginx
        image: "nginx:latest"
        container_name: "${NAMESPACE_DEVELOPMENT}.nginx"
        hostname: "${NAMESPACE_HOSTNAME_DEVELOPMENT}-nginx"
        restart: always
        ports:
            - ${PORT_NGINX}:80
        volumes:
            # Server static pages
            - .:/var/www/web:cached
            # Add nginx configuration
            - ./docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
        networks:
            - network-internal
        depends_on:
            - php
            - composer

    # PHP FPM 8.0.11 to serve dynamic php scripts
    php:
        # @see: https://hub.docker.com/_/php
        image: "php:8.0.11-fpm"
        container_name: "${NAMESPACE_DEVELOPMENT}.php"
        hostname: "${NAMESPACE_HOSTNAME_DEVELOPMENT}-php"
        volumes:
            # Server dynamic pages
            - .:/var/www/web:cached
            # Add PHP configuration
            - ./docker/php/conf.d/config.ini:/usr/local/etc/php/conf.d/config.ini
        networks:
            - network-internal
        #env_file:
            # add app version
            #- ./VERSION
        environment:
            APP_VERSION: ${APP_VERSION}

    # https://hub.docker.com/_/composer
    # Composer 2.1.6
    #
    # Show composer version:
    # ----------------------
    # $ docker-compose run --rm composer -V
    #
    # Composer install:
    # -----------------
    # $ docker-compose run --rm composer install
    #
    # Run tests:
    # ----------
    # $ docker-compose run --rm composer test
    #
    # Show PHP version:
    # -----------------
    # $ docker-compose run --rm composer php-version
    composer:
        image: "composer:latest"
        container_name: "${NAMESPACE_DEVELOPMENT}.composer"
        hostname: "${NAMESPACE_HOSTNAME_DEVELOPMENT}-composer"
        command: ["composer", "install"]
        volumes:
            - .:/app:delegated
        user: "${UID}:${GID}"
        networks:
            - network-internal

# configure networks
networks:
    network-internal:
        external: false
        name: "${NAMESPACE_DEVELOPMENT}.network.internal"
